<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/jdbc 
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:component-scan base-package="com.test" />


	<!-- 事务管理器 对mybatis操作数据库事务控制，spring使用jdbc的事务控制类 -->
<!-- 	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice> -->
	
		<!-- 定义事务管理器 开启Spring事务处理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- <property name="dataSource"> <ref bean="dataSource" /> </property> -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
		<!-- 配置spring声明式事务拦截器 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<!-- 事务拦截器需要依赖注入事务管理器 -->
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<!-- 配置事务传播属性 -->
		<property name="transactionAttributes">
	 	<props>
	  		<prop key="add*">PROPAGATION_REQUIRED</prop>
	  		<prop key="save*">PROPAGATION_REQUIRED</prop>
	 		<prop key="mod*">PROPAGATION_REQUIRED</prop>
	 		<prop key="upd*">PROPAGATION_REQUIRED</prop>
	 		<prop key="del*">PROPAGATION_REQUIRED</prop>
	  		<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
	  		<prop key="query*">PROPAGATION_REQUIRED,readOnly</prop>
	 	</props>
		</property>
	</bean>
	<!-- <aop:config> <aop:advisor advice-ref="txAdvice" pointcut="execution(* 
		com.test.service.impl.*.*(..))" /> </aop:config> -->

	<!-- 扫描标注@Repository注解的service -->
<!-- 	<context:component-scan base-package="com.test.service.impl.*" />
 -->


	<!-- 属性注入器，用于读取项目配置文件中的属性 -->
	<bean id="PropertiesConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:log4j.properties</value>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 数据源，不需要解释 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/test/dao/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>


	<!-- Mybatis sql session -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- Mybatis mapper scanner, scans for java mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.test.dao" />
		<property name="sqlSessionTemplateBeanName" value="sqlSession" />
	</bean>




</beans>